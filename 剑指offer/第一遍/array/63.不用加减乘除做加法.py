"""
题目：

写一个函数，求两个整数之和，要求在函数体内不得使用"+"、"-"、"x"、"\" 四则运算符号

"""


class Solution:
    def Add(self, num1, num2):
        """
        这题位运算还是背下来吧，毕竟位运算这种模拟加法用法基本就这题，很容易就忘掉。。。。。

        ^ 异或 ----相当于 无进位的求和， 想象10进制下的模拟情况：（如:19+1=20；无进位求和就是10，而非20；因为它不管进位情况）

        & 与 ----相当于求每位的进位数， 先看定义：1&1=1；1&0=0；0&0=0；即都为1的时候才为1，正好可以模拟进位数的情况,
        还是想象10进制下模拟情况：（9+1=10，如果是用&的思路来处理，则9+1得到的进位数为1，而不是10，所以要用<<1向左再移动一位，这样就变为10了）；

        这样公式就是：（a^b) ^ ((a&b)<<1) 即：每次无进位求 + 每次得到的进位数--------我们需要不断重复这个过程，直到进位数为0为止；

        但是用Python解题有一个问题，导致循环无法结束，然后超出时间限制，那就是 Python 中的整型变量不会溢出的！
        详细讲解 https://zhuanlan.zhihu.com/p/64642722

        """
        while num2 != 0:  # 直到没有进位了
            # 第一步 各位相加 不进位
            temp = num1 ^ num2
            # 第二步 计算进位
            num2 = (num1 & num2) << 1
            # 第三步 把两者相加（其实就是进行循环），但是要处理一下python的无限长整型
            num1 = temp & 0xFFFFFFFF
        return num1 if num1 >> 31 == 0 else num1 - 4294967296

